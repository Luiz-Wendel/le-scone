// Vars
$cols: 12;
$gutter: 20px;
$l-device: 1200px;
$m-device: 760px;
$s-device: 480px;

// Box-sizing
*,
*::after,
::before {
  box-sizing: border-box;
}

// Media queries Mixin
@mixin device($size) {
  @if $size == l {
    @media screen and (min-width: $l-device) {
      @content;
    }
  } @else if $size == m {
    @media screen and (min-width: $m-device) and (max-width: $l-device - 1) {
      @content;
    }
  } @else if $size == s {
    @media screen and (max-width: $m-device - 1) {
      @content;
    }
  }
}

// Grid Function
@function grid($col, $offset: false) {
  $width: $col / $cols * 100 + '%';

  $result: calc(#{$width} - #{$gutter});

  @if $offset == offset {
    $gutter: $gutter / 2;
    $result: calc(#{$width} + #{$gutter});
  }

  @return $result;
}

// Generate grid classes
@for $i from 1 through $cols {
  .grid-#{$i} {
    width: grid($i);
  }
}

// Grid structure Mixin
@mixin grid-structure {
  float: left;
  min-height: 1px;
  margin-left: $gutter / 2;
  margin-right: $gutter / 2;
  @include device(s) {
    width: 100%;
    float: none;
    margin-left: 0;
    margin-right: 0;
  }
}

[class^='grid-'] {
  @include grid-structure();
}
